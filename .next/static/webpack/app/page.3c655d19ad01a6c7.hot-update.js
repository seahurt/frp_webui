"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/clipboard.ts":
/*!**************************!*\
  !*** ./lib/clipboard.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildCommand: function() { return /* binding */ buildCommand; }\n/* harmony export */ });\nfunction parseHost(rawHost) {\n    const fallbackProtocol = \"http\";\n    try {\n        const hasScheme = /^https?:\\/\\//i.test(rawHost);\n        const url = new URL(hasScheme ? rawHost : \"\".concat(fallbackProtocol, \"://\").concat(rawHost));\n        const protocol = url.protocol.replace(/:$/, \"\") || fallbackProtocol;\n        return {\n            protocol,\n            hostname: url.hostname\n        };\n    } catch (error) {\n        const [hostname = rawHost] = rawHost.split(\":\");\n        return {\n            protocol: fallbackProtocol,\n            hostname\n        };\n    }\n}\nfunction buildCommand(proxy, host) {\n    const { protocol, hostname } = parseHost(host);\n    const suffix = proxy.name.split(\".\").pop();\n    const port = proxy.conf.remotePort;\n    switch(suffix){\n        case \"ssh\":\n            return \"ssh -p \".concat(port, \" \").concat(hostname);\n        case \"web\":\n            return \"\".concat(protocol, \"://\").concat(hostname, \":\").concat(port);\n        default:\n            return \"\".concat(hostname, \":\").concat(port);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9jbGlwYm9hcmQudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUVBLFNBQVNBLFVBQVVDLE9BQWU7SUFDaEMsTUFBTUMsbUJBQW1CO0lBRXpCLElBQUk7UUFDRixNQUFNQyxZQUFZLGdCQUFnQkMsSUFBSSxDQUFDSDtRQUN2QyxNQUFNSSxNQUFNLElBQUlDLElBQUlILFlBQVlGLFVBQVUsR0FBeUJBLE9BQXRCQyxrQkFBaUIsT0FBYSxPQUFSRDtRQUNuRSxNQUFNTSxXQUFXRixJQUFJRSxRQUFRLENBQUNDLE9BQU8sQ0FBQyxNQUFNLE9BQU9OO1FBRW5ELE9BQU87WUFDTEs7WUFDQUUsVUFBVUosSUFBSUksUUFBUTtRQUN4QjtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkLE1BQU0sQ0FBQ0QsV0FBV1IsT0FBTyxDQUFDLEdBQUdBLFFBQVFVLEtBQUssQ0FBQztRQUMzQyxPQUFPO1lBQ0xKLFVBQVVMO1lBQ1ZPO1FBQ0Y7SUFDRjtBQUNGO0FBRU8sU0FBU0csYUFBYUMsS0FBZ0IsRUFBRUMsSUFBWTtJQUN6RCxNQUFNLEVBQUVQLFFBQVEsRUFBRUUsUUFBUSxFQUFFLEdBQUdULFVBQVVjO0lBQ3pDLE1BQU1DLFNBQVNGLE1BQU1HLElBQUksQ0FBQ0wsS0FBSyxDQUFDLEtBQUtNLEdBQUc7SUFDeEMsTUFBTUMsT0FBT0wsTUFBTU0sSUFBSSxDQUFDQyxVQUFVO0lBRWxDLE9BQVFMO1FBQ04sS0FBSztZQUNILE9BQU8sVUFBa0JOLE9BQVJTLE1BQUssS0FBWSxPQUFUVDtRQUMzQixLQUFLO1lBQ0gsT0FBTyxHQUFpQkEsT0FBZEYsVUFBUyxPQUFpQlcsT0FBWlQsVUFBUyxLQUFRLE9BQUxTO1FBQ3RDO1lBQ0UsT0FBTyxHQUFlQSxPQUFaVCxVQUFTLEtBQVEsT0FBTFM7SUFDMUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvY2xpcGJvYXJkLnRzPzNkYTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJveHlJdGVtIH0gZnJvbSAnQC9saWIvdHlwZXMnO1xuXG5mdW5jdGlvbiBwYXJzZUhvc3QocmF3SG9zdDogc3RyaW5nKTogeyBwcm90b2NvbDogc3RyaW5nOyBob3N0bmFtZTogc3RyaW5nIH0ge1xuICBjb25zdCBmYWxsYmFja1Byb3RvY29sID0gJ2h0dHAnO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgaGFzU2NoZW1lID0gL15odHRwcz86XFwvXFwvL2kudGVzdChyYXdIb3N0KTtcbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGhhc1NjaGVtZSA/IHJhd0hvc3QgOiBgJHtmYWxsYmFja1Byb3RvY29sfTovLyR7cmF3SG9zdH1gKTtcbiAgICBjb25zdCBwcm90b2NvbCA9IHVybC5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKSB8fCBmYWxsYmFja1Byb3RvY29sO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHByb3RvY29sLFxuICAgICAgaG9zdG5hbWU6IHVybC5ob3N0bmFtZVxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc3QgW2hvc3RuYW1lID0gcmF3SG9zdF0gPSByYXdIb3N0LnNwbGl0KCc6Jyk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHByb3RvY29sOiBmYWxsYmFja1Byb3RvY29sLFxuICAgICAgaG9zdG5hbWVcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBidWlsZENvbW1hbmQocHJveHk6IFByb3h5SXRlbSwgaG9zdDogc3RyaW5nKTogc3RyaW5nIHtcbiAgY29uc3QgeyBwcm90b2NvbCwgaG9zdG5hbWUgfSA9IHBhcnNlSG9zdChob3N0KTtcbiAgY29uc3Qgc3VmZml4ID0gcHJveHkubmFtZS5zcGxpdCgnLicpLnBvcCgpO1xuICBjb25zdCBwb3J0ID0gcHJveHkuY29uZi5yZW1vdGVQb3J0O1xuXG4gIHN3aXRjaCAoc3VmZml4KSB7XG4gICAgY2FzZSAnc3NoJzpcbiAgICAgIHJldHVybiBgc3NoIC1wICR7cG9ydH0gJHtob3N0bmFtZX1gO1xuICAgIGNhc2UgJ3dlYic6XG4gICAgICByZXR1cm4gYCR7cHJvdG9jb2x9Oi8vJHtob3N0bmFtZX06JHtwb3J0fWA7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBgJHtob3N0bmFtZX06JHtwb3J0fWA7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJwYXJzZUhvc3QiLCJyYXdIb3N0IiwiZmFsbGJhY2tQcm90b2NvbCIsImhhc1NjaGVtZSIsInRlc3QiLCJ1cmwiLCJVUkwiLCJwcm90b2NvbCIsInJlcGxhY2UiLCJob3N0bmFtZSIsImVycm9yIiwic3BsaXQiLCJidWlsZENvbW1hbmQiLCJwcm94eSIsImhvc3QiLCJzdWZmaXgiLCJuYW1lIiwicG9wIiwicG9ydCIsImNvbmYiLCJyZW1vdGVQb3J0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/clipboard.ts\n"));

/***/ })

});